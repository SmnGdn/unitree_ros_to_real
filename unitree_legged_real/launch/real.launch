<launch>
    <arg name="ctrl_level" default="lowlevel"/>

    <node pkg="unitree_legged_real" type="ros_udp" name="node_ros_udp" output="screen" args="$(arg ctrl_level)"/>

    <param name="control_level" value="$(arg ctrl_level)"/>


    <arg name="rname" default="go1"/>
    <arg name="robot_path" value="(find $(arg rname)_description)"/>
    <arg name="dollar" value="$"/>
    <arg name="user_debug" default="false"/>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description"
           command="$(find xacro)/xacro --inorder '$(arg dollar)$(arg robot_path)/xacro/robot.xacro' DEBUG:=$(arg user_debug)"/>


    <!-- Load joint controller configurations from YAML file to parameter server -->
    <!-- <rosparam file="$(arg dollar)$(arg robot_path)/config/robot_control.yaml" command="load"/> -->

    <!-- load the controllers -->
    <!-- <node pkg="controller_manager" type="spawner" name="controller_spawner" respawn="false"
          output="screen" ns="/$(arg rname)_gazebo" args="joint_state_controller
          FL_hip_controller FL_thigh_controller FL_calf_controller
          FR_hip_controller FR_thigh_controller FR_calf_controller
          RL_hip_controller RL_thigh_controller RL_calf_controller
          RR_hip_controller RR_thigh_controller RR_calf_controller "/> -->

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"
          respawn="false" output="screen">
    </node>

    <!-- <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher">
    </node> -->

    <!-- load the parameter unitree_controller -->
    <!-- <include file="$(find unitree_controller)/launch/set_ctrl.launch">
        <arg name="rname" value="$(arg rname)"/>
    </include> -->

</launch>